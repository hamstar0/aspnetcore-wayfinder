Phase 3
...
-	Implement database backend
-	Implement UI components (2)
	-	Goal editor
		-	Add description input
	-	Plan timeline editor
		-	Implement input option for multiple 'user action' windows per plan step
	-	Term editor (2)
		-	Add alias picker
		-	Add context picker
-	Implement Abridged parameter for deploying ScheduleEditor popup
Phase 2
-	Implement tabs (2)
	-	Map editor
-	Descriptor data editor (3)
	-	Data input components (2)
		-	Address input
		-	Area input
...
-	Brainstorm a way to assign labels to 'knowledge patterns'
...
-	Implement tabs (2)
	-	Knowledge prompting
Phase 1
-	Implement UI components
	-	DescriptorDisplay (condensed view)
	-	Term editor (1)
		-	Implement search result scrolling and selecting via keyboard
	-	Descriptor data editor (2)
		-	Add context term to data inputs
		-	Data input components (1)
			-	Range input
			-	Term list input
			-	Range input
-	Add reset button (CanReset=true) for DescriptorEditor, GoalEditor, PlanEditor
-	Implement tabs (1)
	-	Knowledge prompting (layout only)
	-	Knowledge editor
		-	Show searched descriptors in a large scrollable list
		-	Clear current descriptor
		-	DescriptorEditor search feature with submit button for edits or creates
	-	Plan timeline editor
		-	Implement naming of plans
		-	Implement option scheduling (prompting)
			-	Deploy TimelineOptionEditor in edit mode for the priority chosen option
			-	Choose option based on 
		-	Show queue of chosen options overlaid upon timeline (active ones highlighted and prioritized)
		-	Show scheduled chosen options in the timeline view
		-	Implement concept of a chosen option and a scheduled chosen option
		-	Implement 'option' input
			-	Show options for each given condition in the tree view (overlay)
			-	For a given condition, implement 'option' input (TimelineOptionEditor)
			-	Implement goal or sub-goal condition picking
		-	Add a tree view of conditions to fulfill, starting with the top level goal
-	Add Label to TimelineDisplay
-	Implement DurationInput (standard) component
-	Implement the concept of plan 'options' (2)
	-	Implement PlanOptionTreeEditor
	-	Implement PlanOptionEditor
	-	Implement PlanEditor


-	Implement comparing timelines
-	Define central data structure for global fact store of Descriptors
-	Redefine DescriptorEntry to be simply a schedule and conditions
-	Add context to IBoolean
-	Implement the concept of plan 'options' (1)
	-	Define PlanOptionTreeEditor
	-	Define PlanEditor
	-	Define PlanOptionEditor
	-	Modify Plan data structure to simply be a collection of 'options' to enact [to fulfill a given goal]
	-	Define PlanOptionEntry
		-	Name
		-	Condition Descriptors
		-	Action Descriptor
		-	IsChosen
		-	MimimumEnactDuration
		-	AvailableTimeWindows
		-	ScheduledTimeWindow
-	Update ScheduleEditor/ScheduleDisplay
	-	Draw timeline of conditions windows
	-	Add button to toggle draw condition windows
	-	Set ScheduleEditor to use ScheduleDisplay
-	Fix Descriptor Conditions input
-	@Create new repo
-	Set submit button to be optional
	-	Descriptor editor (also implement OnDescriptorEdit)
	-	Schedule editor
-	Clean up css
-	Set database placeholder to use json calls to server
-	@Test
-	Create database placeholder
-	Define UI components (1)
	-	Conditions editor
		-	Implement Descriptor picker
		-	Implement AND and OR buttons
		-	Implement tree view
	-	Descriptor data input (1)
		-	Schedule timeline editor (part 2)
			-	Display time scale ticks
			-	Implement scrolling
			-	Seg drawing
			-	Zoom buttons
			-	Submit
		-	Data input components (part 1)
			-	Scalar input
		-	Schedule timeline editor (part 1)
			-	Timeline segment display
			-	Data type picker
	-	Implement descriptor picker
	-	Implement term picker
	-	Changes
		-	Add data type entres (scalar, range, descriptor list)
		//-	Define data type specifications documentation
		-	Modify Descriptor
			//-	Add 'DataType' field
			-	Add 'Conditions' field
			-	Set 3rd term to be nullabe
		-	Rename Concept into Descriptor
	-	@Test
	-	Goal input (goal name + concept input)
		-	Submit button
		-	Goal name input
		-	Concept input (does not accept search results)
	-	Concept input/picker
		-	Add submit button
		-	Concept search input (by Term)
		-	Layout inputs (3 term inputs, 1 data input)
	-	Term input/picker
		-	Implement term input
		-	Implement script for term select
		-	Implement search result select via mouse
		-	Implement search results list display
	-	Plans list
	-	Goals list
	-	Concepts list
	-	Terms list
-	Define basic UI layout
	-	Tabs
		-	Map editor (of selected sidebar goal's location context)
		-	Knowledge editor
			-	Search tabs
			-	Term search bar
			-	Concept list panel
		-	Prompt wizard (concept input + meta-concept input)
			-	Term follow-ups priority queue panel
			-	Concept input panel (added buttons for giving prompt priority for given terms)
		-	Plan editor (of selected sidebar plan)
			-	Plan timeline
		-	Goal input (concept input)
			-	Goal input
				-	Concept input panel
				-	Goal input
	-	Concept panel (template)
		-	Location address input panel
		-	Timeline input panel
		-	Concept input panel
	-	Side bar
		-	Plans list of current goal (bottom)
		-	Goals list (top)
-	Create data structure classes
	-	Plan steps
	-	Plan
	-	Goal
	-	Place
	-	Time
	-	Concept
	-	Term
