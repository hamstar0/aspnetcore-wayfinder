@using Wayfinder.Shared.Utility;
@using Wayfinder.Shared.Data
@using Wayfinder.Shared.Data.Entries.Descriptor;
@using Wayfinder.Shared.Utility.BooleanTree;
@using Wayfinder.Client.Components.Standard;
@using Wayfinder.Client.Components.Application.Views;



<div component-name="DescriptorConditionsTreeDisplay"
        style=@this.Style
        class="basic" >
    @for( int i=0; i<this.Tree.Children.Count; i++ ) {
        IBoolean<DescriptorFactsBooleanContext> node = this.Tree.Children[i];

        @if( node is DescriptorConditionsTree ) {
            <DescriptorConditionsTreeDisplay
                    Style="padding-left: 8px; display: inline-block;"
                    Tree=@((DescriptorConditionsTree)node) />
        } else if( node is DataTimelineEntry ) {
            <div>
                <DescriptorFactsDisplay
                        Style="padding-left: 8px; display: inline-block;"
                        Node=@((DescriptorFacts)node) />

                @this.AfterCondition?.Invoke( (DescriptorFacts)node );

                @if( i < (this.Tree.Children.Count - 1) ) {
                    <span>@(this.Tree.IsAnd ? " AND " : " OR ")</span>
                }
            </div>
        } else {
            throw new NotImplementedException();
        }
    }
</div>


@code {
    [Parameter, EditorRequired]
    public DescriptorConditionsTree Tree { get; set; } = null!;

    [Parameter]
    public string? Style { get; set; } = null;

    [Parameter]
    public RenderFragment<DescriptorFacts>? AfterCondition { get; set; } = null;
}
