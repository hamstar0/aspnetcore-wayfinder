@using Wayfinder.Shared.Data
@using Wayfinder.Shared.Data.Entries.Descriptor;
@using Wayfinder.Shared.Utility.BooleanTree;
@using Wayfinder.Client.Components.Standard;
@using Wayfinder.Client.Components.Application.Views;
@using Wayfinder.Shared.Utility;



<div component-name="DescriptorConditionsTreeEditor"
        style=@this.Style
        class="basic @(this.Disabled ? "disabled" : null)"
        @onclick=@(e => this.OnTreeSelect(this.Conditions))>
    @for( int i=0; i<this.Conditions.Children.Count; i++ ) {
        IBoolean<DataTimelineBooleanContext> node = this.Conditions.Children[i];

        @if( node is DescriptorConditionsTree ) {
            <DescriptorConditionsTreeEditor
                    Disabled=@this.Disabled
                    Style="padding-left: 8px; display: inline-block;"
                    Conditions=@((DescriptorConditionsTree)node)
                    OnTreeSelect=@this.OnTreeSelect />
        } else {
            <div>
                <DescriptorDisplay
                        Style="padding-left: 8px; display: inline-block;"
                        Descriptor=@((DescriptorEntry)node) />

                @if( i < (this.Conditions.Children.Count - 1) ) {
                    <span>@(this.Conditions.IsAnd ? " AND " : " OR ")</span>
                }
            </div>
        }
    }

    @if( this.Conditions.Children.Count > 0 ) {
        @if( this.Conditions.IsAnd ) {
            <button disabled=@this.Disabled
                    @onclick=@(async e => await this.AddTree_UI_Async(false))>
                OR
            </button>
        } else {
            <button disabled=@this.Disabled
                    @onclick=@(async e => await this.AddTree_UI_Async(true))>
                AND
            </button>
        }
    }
</div>
