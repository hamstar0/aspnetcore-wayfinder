@using Wayfinder.Shared.Data.Entries;
@using Wayfinder.Shared.Libraries;
@using Wayfinder.Client.Components.Standard
@using Wayfinder.Client.Components.Application.Views;
@using Wayfinder.Client.Components.Application.Editors.Descriptor;
@using Wayfinder.Client.Components.Application.Editors.DescriptorConditions



<div component-name="PlanOptionEditor" class="basic">
	<label>
		Enter option name (optional):
		<input type="text" />
	</label>

	@if( this.Plan is not null ) {
		<ToggleSwitch Label="Is active" IsOn=@this.Plan.OptionsPool.Contains(this.EditOption)
				IsOnChanged=@(async (e) => await this.ToggleCurrentPlanOption_UI_Async()) />
	}

	<DurationInput Label="Enter minimum enact duration"
			Description="Duration needed to apply action to make this option become realized."
			OnInput=@(async (e) => this.Option.MinimumEnactingDuration = e) />
	
	<DescriptorConditionsEditor CanCreate=@true CanEdit=@true
			OnSubmit=@(async (conds, isEdit) => {}) />

	<DescriptorEditor Label="Define option to enact"
            CanCreate=@true CanEdit=@true CanSearch=@false CanReset=@true
            OnDescriptorSelect=@(async e => f) />
</div>
